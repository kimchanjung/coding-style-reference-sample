{"version":3,"sources":["Crawling.js","App.js","reportWebVitals.js","index.js"],"names":["Crawling","useState","url","setUrl","parsingTypes","setParsingTypes","bundleUnit","setBundleUnit","quotient","setQuotient","remainder","setRemainder","name","onSubmit","event","preventDefault","axios","post","then","response","console","log","data","catch","error","alert","message","style","textAlign","id","type","onChange","value","target","fontSize","width","padding","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGe,SAASA,IAAY,IAAD,EACTC,mBAAS,wBADA,mBACxBC,EADwB,KACnBC,EADmB,OAESF,mBAAS,eAFlB,mBAExBG,EAFwB,KAEVC,EAFU,OAGKJ,mBAAS,GAHd,mBAGxBK,EAHwB,KAGZC,EAHY,OAKCN,mBAAS,IALV,mBAKxBO,EALwB,KAKdC,EALc,OAMGR,mBAAS,IANZ,mBAMxBS,EANwB,KAMbC,EANa,KA+B/B,OACI,gCACI,sBAAMC,KAAK,WAAWC,SAxBT,SAACC,GAClBA,EAAMC,iBAENC,IAAMC,KAAK,mBAAoB,CAC3Bf,IAAKA,EACLE,aAAcA,EACdE,WAAYA,IAEfY,MAAK,SAAUC,GACZC,QAAQC,IAAIF,GADU,MAEQA,EAASG,KAAhCd,EAFe,EAEfA,SAAUE,EAFK,EAELA,UAEjBD,EAAYD,GACZG,EAAaD,MAGhBa,OAAM,SAAUC,GACbJ,QAAQC,IAAIG,EAAML,UAClBM,MAAMD,EAAML,SAASG,KAAKI,aAM1B,SACI,sBAAKC,MAAO,CAACC,UAAU,QAAvB,UACI,yCAAa,uBAAOhB,KAAK,MAAMiB,GAAG,MAAMC,KAAK,OAAOC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2B7B,EAAO6B,IAAQA,MAAO9B,OAC/G,0CACI,yBAAQU,KAAK,eAAeiB,GAAG,eAAeE,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2B3B,EAAgB2B,IAAnG,UACI,wBAAQA,MAAM,cAAd,oCACA,wBAAQA,MAAM,WAAd,kDAGR,0EAAgB,uBAAOpB,KAAK,aAAaiB,GAAG,aAAaC,KAAK,SAASC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BzB,EAAcyB,IAAQA,MAAO1B,OACzI,4BAAG,wBAAQM,KAAK,QAAQiB,GAAG,QAAQC,KAAK,SAASH,MAAO,CAACO,SAAS,QAA/D,iCAGX,sBAAKP,MAAO,CAACC,UAAU,OAAQO,MAAM,SAArC,UACI,uCACA,qBAAKR,MAAO,CAACS,QAAQ,QAArB,SAA+B5B,IAC/B,oDACA,qBAAKmB,MAAO,CAACS,QAAQ,QAArB,SAA+B1B,UCxChC2B,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACtC,EAAD,SCKOuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e33b7692.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function Crawling() {\n    const [url, setUrl] = useState(\"http://www.naver.com\");\n    const [parsingTypes, setParsingTypes] = useState(\"WITHOUT_TAG\");\n    const [bundleUnit, setBundleUnit] = useState(2);\n\n    const [quotient, setQuotient] = useState(\"\");\n    const [remainder, setRemainder] = useState(\"\");\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n      \n        axios.post('/api/v1/crawling', {\n            url: url,\n            parsingTypes: parsingTypes,\n            bundleUnit: bundleUnit\n        })\n        .then(function (response) {\n            console.log(response);\n            const {quotient, remainder} = response.data;\n\n            setQuotient(quotient);\n            setRemainder(remainder)\n\n        })\n        .catch(function (error) {\n            console.log(error.response);\n            alert(error.response.data.message);\n        });\n    }\n\n    return (\n        <div>\n            <form name=\"crawling\" onSubmit={handleSubmit}>\n                <div style={{textAlign:\"left\"}}>\n                    <p>URL &nbsp;<input name=\"url\" id=\"url\" type=\"text\" onChange={({ target: { value } }) => setUrl(value)} value={url}/></p>\n                    <p>TYPE &nbsp;\n                        <select name=\"parsingTypes\" id=\"parsingTypes\" onChange={({ target: { value } }) => setParsingTypes(value)}>\n                            <option value=\"WITHOUT_TAG\" >HTML TAG 제외 </option>\n                            <option value=\"TEXT_ALL\">텍스트전체</option>\n                        </select>\n                    </p>\n                    <p>출력묶음단위 &nbsp;<input name=\"bundleUnit\" id=\"bundleUnit\" type=\"number\" onChange={({ target: { value } }) => setBundleUnit(value)} value={bundleUnit}/></p> \n                    <p><button name=\"print\" id=\"print\" type=\"submit\" style={{fontSize:\"20px\"}} >출력</button></p> \n                </div>\n            </form>\n            <div style={{textAlign:\"left\", width:\"500px\"}}>\n                <p>몫</p>\n                <div style={{padding:\"50px\"}}>{quotient}</div>\n                <p>나머지 </p>\n                <div style={{padding:\"50px\"}}>{remainder}</div>\n            </div>\n        </div>\n  )\n}\n\n","import './App.css';\nimport Crawling from './Crawling';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Crawling />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}